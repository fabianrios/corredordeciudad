<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title><%= content_for?(:title) ? yield(:title) : "MDE15" %></title>

    <%= stylesheet_link_tag    "application" %>
		<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.11.1/mapbox-gl.css' rel='stylesheet' />
		<link href='https://api.mapbox.com/mapbox.js/v2.2.2/mapbox.css' rel='stylesheet' />
    <%= javascript_include_tag "vendor/modernizr" %>
    <%= javascript_include_tag "application" %>
		<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.11.1/mapbox-gl.js'></script>
    <%= csrf_meta_tags %>
		
	  <!-- required: realtime support framework -->
	  <%= realtime_support %>
	  <!-- optional: message_handler dequeues realtime messages into Backbone.js style events -->
	  <%= realtime_message_handler %>
	  <!-- optional: message_console_logger listens or dequeues realtime messages to the browser console -->
	  <%= realtime_message_console_logger %>
  </head>

  <body>
	
		<div class="main"><%= yield %></div>
    <script>
		
		var museo = [-75.571529,6.252187];
		// Provide your access token
		mapboxgl.accessToken = 'pk.eyJ1IjoiZmFiaWFucmlvcyIsImEiOiJjaWc3ZDFhMjMwczFvdjRrcHF4bXliMzNoIn0.PTi-JKyYhEaQknlR6iGCoA';
		// Create a map in the div #map
		var map = new mapboxgl.Map({
		    container: 'map', // container id
		    style: 'mapbox://styles/mapbox/dark-v8',
		    center: museo, // starting position at the museum
		    zoom: 12.2, // starting zoom
				bearing: 90
		});
		
		var url = 'http://localhost:3000/pages/index.json';
		var source = new mapboxgl.GeoJSONSource({
		    data: url
		});
		window.setInterval(function() {
		    source.setData(url);
				// console.log("source",source);
		}, 5000);
		

		map.on('style.load', function (e) {
			
	 		map.setLayoutProperty('country-label-lg', 'text-field', '{name_' + 'es' + '}');
	 		map.setPaintProperty('water', 'fill-color', '#5796e5');
			
			window.setInterval(function() {
				demo();
			}, 5000);
		
			function demo(){
				console.log("running");
				map.featuresIn([[10, 20], [1280, 900]],{ layer: 'markers' },
				function(err, features) {
					if (err) throw err;
				  console.log(features);
				});
			}

			var where = [];
			map.on('click', function (e) {
				console.log(e.point);
			  map.featuresAt(e.point, {layer: 'markers', radius: 10, includeGeometry: true}, function (err, features) {
		        if (err) throw err;
		        if (features.length) {
		            // Get coordinates from the symbol and center the map on those coordinates
								where = features[0].geometry.coordinates;
								var new_coord = [];
								new_coord.push(where[0]);
								new_coord.push(where[1]-0.005);
								
		            map.flyTo({
									center: new_coord,
									zoom: 14,
									speed: 0.7,
								  curve: 1
								});
								features[0].properties.tag_list
								
								var tags = "";
								if (features[0].properties.tag_list.length > 0) {
									features[0].properties.tag_list.forEach(function(entry) {
										tags = tags + "<li><span class='label secondary'>"+entry+"</li>";
									});
									tags = "<li><i class='fa fa-tags fa-flip-horizontal'></i></li>"+tags;
								}
								
								var html = "<h3 class='capitalize'>"+features[0].properties.title+"</h3>"+"<div class='text-right'><span class='label success'>"+features[0].properties.cuando+"</span></div><div class='image_map'><img src='"+features[0].properties.imagen+"' /></div>"+"<p class='no-margin maxh'>"+features[0].properties.description+"</p><ul class='inline no-bullet'>"+tags+"</ul><h6>"+features[0].properties.direccion+"</h6>"+"<div class='text-center'><a>"+features[0].properties.web+"</a></div>";
								$('#features').show();
								document.getElementById('features').innerHTML = html;
								setTimeout(function() {
									$('#features').hide();
				          map.flyTo({
										center: museo, 
										zoom: 12.2,
										speed: 1,
									  curve: 1
									});
								}, 12000);
		        }
		    });
			});
			
			// Use the same approach as above to indicate that the symbols are clickable
			// by changing the cursor style to 'pointer'.
			map.on('mousemove', function (e) {
			    map.featuresAt(e.point, {layer: 'markers', radius: 10}, function (err, features) {
			        if (err) throw err;
			        map.getCanvas().style.cursor = features.length ? "pointer" : "";
			    });
			});

			map.addSource('markers', source);

		  map.addLayer({
		    "id": "markers",
		    "type": "symbol",
		    "source": "markers",
				"interactive": true,
		    "layout": {
					  "icon-image": "default_marker",
		        "text-field": "{title}",
		        "text-font": ["Open Sans Semibold", "Arial Unicode MS Bold"],
		        "text-offset": [0, 1.5],
						"text-size": 13,
		        "text-anchor": "top",
						"text-optional": true
		    },
		    "paint": {
						"text-color": "#cccccc"
		    }
  		}); // addLayers

		});
			
		
		</script>
  </body>
</html>